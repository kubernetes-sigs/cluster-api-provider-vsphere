name: release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

permissions:
  contents: write # Allow to create a release.

jobs:
  build:
    name: create draft release
    runs-on: ubuntu-latest
    steps:
      - name: Set env
        run:  echo "RELEASE_TAG=${GITHUB_REF:10}" >> $GITHUB_ENV
      - name: checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # tag=v4.2.2
        with:
          fetch-depth: 0
      - name: Calculate go version
        run: echo "go_version=$(make go-version)" >> $GITHUB_ENV
      - name: Set up Go
        uses: actions/setup-go@41dfa10bad2bb2ae585af6ee5bb4d7d973ad74ed # tag=v5.1.0
        with:
          go-version: ${{ env.go_version }}
      - name: generate release artifacts
        run: |
          make release
      - name: generate release notes
        # Ignore failures for release-notes generation so they could still get
        # generated manually before publishing.
        run: |
          make generate-release-notes || echo "Failed to generate release notes" >> _releasenotes/${{ env.RELEASE_TAG }}.md
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Release
        uses: softprops/action-gh-release@e7a8f85e1c67a31e6ed99a94b41bd0b71bbee6b8 # tag=v2.0.9
        with:
          draft: true
          files: out/*
          body_path: _releasenotes/${{ env.RELEASE_TAG }}.md
