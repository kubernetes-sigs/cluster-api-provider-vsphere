version: "2"
run:
  timeout: 10m
  go: "1.24"
  allow-parallel-runners: true
linters:
  default: none
  enable:
    - asasalint # warns about passing []any to func(...any) without expanding it
    - asciicheck # non ascii symbols
    - bidichk # dangerous unicode sequences
    - bodyclose # unclosed http bodies
    - containedctx # context.Context nested in a struct
    - dogsled # too many blank identifiers in assignments
    - dupword # duplicate words
    - durationcheck # multiplying two durations
    - errcheck # unchecked errors
    - errchkjson # invalid types passed to json encoder
    - ginkgolinter # ginkgo and gomega
    - goconst
    - gocritic # bugs, performance, style (we could add custom ones to this one)
    - godot # checks that comments end in a period
    - goprintffuncname # printft-like functions should be named with f at the end
    - gosec # potential security problems
    - govet # basically 'go vet'
    - importas # consistent import aliases
    - ineffassign # ineffectual assignments
    - loggercheck # check for even key/value pairs in logger calls
    - misspell # spelling
    - nakedret # naked returns (named return parameters and an empty return)
    - nilerr # returning nil after checking err is not nil
    - noctx # http requests without context.Context
    - nolintlint # badly formatted nolint directives
    - nosprintfhostport # using sprintf to construct host:port in a URL
    - prealloc # suggest preallocating slices
    - predeclared # shadowing predeclared identifiers
    - revive # better version of golint
    - staticcheck # some of staticcheck's rules
    - thelper # test helpers not starting with t.Helper()
    - unconvert # unnecessary type conversions
    - unparam # unused function parameters
    - unused # unused constants, variables,functions, types
    - usestdlibvars # using variables/constants from the standard library
    - usetesting # report function to be replace by testing
    - whitespace # unnecessary newlines
  settings:
    ginkgolinter:
      forbid-focus-container: true
    gocritic:
      disabled-checks:
        - appendAssign
        - dupImport # https://github.com/go-critic/go-critic/issues/845
        - evalOrder
        - ifElseChain
        - octalLiteral
        - regexpSimplify
        - sloppyReassign
        - truncateCmp
        - typeDefFirst
        - unnamedResult
        - unnecessaryDefer
        - whyNoLint
        - wrapperFunc
        - rangeValCopy
        - hugeParam
      enabled-tags:
        - diagnostic
        - experimental
        - performance
    godot:
      #   declarations - for top level declaration comments (default);
      #   toplevel     - for top level comments;
      #   all          - for all comments.
      scope: toplevel
      exclude:
        - ^ \+.*
        - ^ ANCHOR.*
    gosec:
      excludes:
      # integer overflow conversion int -> int32
        - G115
    importas:
      no-unaliased: true
      alias:
        # Kubernetes
        - pkg: k8s.io/api/core/v1
          alias: corev1
        - pkg: k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1
          alias: apiextensionsv1
        - pkg: k8s.io/apimachinery/pkg/apis/meta/v1
          alias: metav1
        - pkg: k8s.io/apimachinery/pkg/api/errors
          alias: apierrors
        - pkg: k8s.io/apimachinery/pkg/util/errors
          alias: kerrors
        - pkg: k8s.io/component-base/logs/api/v1
          alias: logsv1
        # Controller Runtime
        - pkg: sigs.k8s.io/controller-runtime
          alias: ctrl
        # CAPV
        - pkg: sigs.k8s.io/cluster-api-provider-vsphere/apis/v1beta1
          alias: infrav1
        - pkg: sigs.k8s.io/cluster-api-provider-vsphere/apis/v1alpha3
          alias: infrav1alpha3
        - pkg: sigs.k8s.io/cluster-api-provider-vsphere/apis/v1alpha4
          alias: infrav1alpha4
        - pkg: sigs.k8s.io/cluster-api-provider-vsphere/apis/vmware/v1beta1
          alias: vmwarev1
        # VMware Operator
        - pkg: github.com/vmware-tanzu/vm-operator/api/v1alpha2
          alias: vmoprv1
        # NSX Operator
        - pkg: github.com/vmware-tanzu/nsx-operator/pkg/apis/vpc/v1alpha1
          alias: nsxvpcv1
        # CABPK
        - pkg: sigs.k8s.io/cluster-api/api/bootstrap/kubeadm/v1beta2
          alias: bootstrapv1
        - pkg: sigs.k8s.io/cluster-api/api/bootstrap/kubeadm/v1beta1
          alias: bootstrapv1beta1
        # KCP
        - pkg: sigs.k8s.io/cluster-api/api/controlplane/kubeadm/v1beta2
          alias: controlplanev1
        # CAPI
        - pkg: sigs.k8s.io/cluster-api/api/core/v1beta2
          alias: clusterv1
        - pkg: sigs.k8s.io/cluster-api/api/core/v1beta1
          alias: clusterv1beta1
        - pkg: sigs.k8s.io/cluster-api/util/deprecated/v1beta1/conditions
          alias: v1beta1conditions
        - pkg: sigs.k8s.io/cluster-api/util/deprecated/v1beta1/conditions/v1beta2
          alias: v1beta2conditions
        # CAPI addons
        - pkg: sigs.k8s.io/cluster-api/api/addons/v1beta2
          alias: addonsv1
        # CAPI IPAM 
        - pkg: sigs.k8s.io/cluster-api/api/ipam/v1beta2
          alias: ipamv1
        - pkg: sigs.k8s.io/cluster-api/api/ipam/v1beta1
          alias: ipamv1beta1
    nolintlint:
      require-specific: true
      allow-unused: false
    revive:
      rules:
        # The following rules are recommended https://github.com/mgechev/revive#recommended-configuration
        - name: blank-imports
        - name: context-as-argument
        - name: context-keys-type
        - name: dot-imports
        - name: error-return
        - name: error-strings
        - name: error-naming
        - name: exported
        - name: if-return
        - name: increment-decrement
        - name: var-naming
        - name: var-declaration
        - name: package-comments
        - name: range
        - name: receiver-naming
        - name: time-naming
        - name: unexported-return
        - name: indent-error-flow
        - name: errorf
        - name: empty-block
        - name: superfluous-else
        - name: unused-parameter
        - name: unreachable-code
        - name: redefines-builtin-id
        #
        # Rules in addition to the recommended configuration above.
        #
        - name: bool-literal-in-expr
        - name: constant-logical-expr
  exclusions:
    generated: strict
    paths:
      - zz_generated.*\.go$
      - _conversion\.go$
      - vendored_cluster_api\.go$
      - ^internal/apis/topology/v1alpha1
    # Specific exclude rules for deprecated fields that are still part of the codebase. These
    # should be removed as the referenced deprecated item is removed from the project.
    rules:
        # Deprecations for AutoConfigure
      - linters:
          - staticcheck
        text: 'SA1019: .*AutoConfigure is deprecated'
        # Deprecations for PreferredAPIServerCIDR
      - linters:
          - staticcheck
        text: 'SA1019: .*PreferredAPIServerCIDR is deprecated'
        # Deprecations for FailureReason
      - linters:
          - staticcheck
        text: 'SA1019: "sigs.k8s.io/cluster-api/errors" is deprecated:'
        # Deprecations for old api groups
      - linters:
          - staticcheck
        text: 'SA1019: "sigs.k8s.io/cluster-api-provider-vsphere/apis/(v1alpha3|v1alpha4)" is deprecated: This package will be removed in one of the next releases.'
      - linters:
          - staticcheck
        text: 'SA1019: "sigs.k8s.io/cluster-api/api/core/v1beta1" is deprecated: This package is deprecated and is going to be removed when support for v1beta1 will be dropped.'
        # CAPV Govmomi aggregates from IPAddressClaims to v1beta1 conditions
      - linters:
          - staticcheck
        text: 'SA1019: "sigs.k8s.io/cluster-api/api/ipam/v1beta1" is deprecated: This package is deprecated and is going to be removed when support for v1beta1 will be dropped.'
      - linters:
          - staticcheck
        text: 'SA1019: "sigs.k8s.io/cluster-api/util/deprecated/v1beta1/.*" is deprecated'
      - linters:
          - staticcheck
        text: 'SA1019: corev1.Endpoints is deprecated: This API is deprecated in v1.33\+. Use discoveryv1.EndpointSlice.'
      - linters:
          - staticcheck
        text: 'SA1019: corev1.EndpointSubset is deprecated: This API is deprecated in v1.33\+.'
      - linters:
          - revive
        text: 'exported: exported method .*\.(Reconcile|SetupWithManager|SetupWebhookWithManager) should have comment or be unexported'
      - linters:
          - errcheck
        text: Error return value of .((os\.)?std(out|err)\..*|.*Close|.*Flush|os\.Remove(All)?|.*print(f|ln)?|os\.(Un)?Setenv). is not checked
        # Exclude some packages or code to require comments, for example test code, or fake clients.
      - linters:
          - revive
        text: exported (method|function|type|const) (.+) should have comment or be unexported
        source: (func|type).*Fake.*
      - linters:
          - revive
        path: ^(test/|packaging/|pkg/.*/fake/|pkg/util/testutil).*.go
        text: exported (.+) (.+) should have comment (.*)or be unexported
      - linters:
          - revive
        path: ^packaging/.*.go
        text: a blank import should be only in a main or test package, or have a comment justifying it
        # Disable unparam "always receives" which might not be really
        # useful when building libraries.
      - linters:
          - unparam
        text: always receives
        # Dot imports for gomega and ginkgo are allowed
        # within test files and test utils.
      - linters:
          - revive
          - staticcheck
        path: _test\.go
        text: should not use dot imports
      - linters:
          - revive
          - staticcheck
        path: test/e2e/.*.go
        text: should not use dot imports
      - linters:
          - revive
          - staticcheck
        path: test/framework/.*.go
        text: should not use dot imports
      - linters:
          - revive
          - staticcheck
        path: test/helpers/vmware/.*.go
        text: should not use dot imports
        # Append should be able to assign to a different var/slice.
      - linters:
          - gocritic
        text: 'appendAssign: append result not assigned to the same slice'
        # Disable linters for conversion
      - linters:
          - staticcheck
        path: ^apis\/.*\/.*conversion.*\.go$
        text: 'SA1019: in.(.+) is deprecated'
      - linters:
          - revive
        # Ignoring stylistic checks for generated code
        path: ^apis\/.*\/.*conversion.*\.go$
        # Checking if an error is nil to just after return the error or nil is redundant
        text: 'if-return: redundant if ...; err != nil check, just return error instead'
      - linters:
          - revive
        # Ignoring stylistic checks for generated code
        path: ^apis\/.*\/.*conversion.*\.go$
        # Exported function and methods should have comments. This warns on undocumented exported functions and methods.
        text: exported (method|function|type|const) (.+) should have comment or be unexported
      - linters:
          - revive
        # Ignoring stylistic checks for generated code
        path: ^apis\/.*\/.*conversion.*\.go$
        # This rule warns when initialism, variable or package naming conventions are not followed.
        text: 'var-naming: don''t use underscores in Go names;'
      - linters:
          - revive
        # Ignoring stylistic checks for generated code
        path: ^apis\/.*\/.*conversion.*\.go$
        # By convention, receiver names in a method should reflect their identity.
        text: 'receiver-naming: receiver name'
      - linters:
          - staticcheck
        path: ^apis\/.*\/.*conversion.*\.go$
        text: 'ST1003: should not use underscores in Go names;'
      - linters:
          - staticcheck
        path: ^apis\/.*\/.*conversion.*\.go$
        text: 'ST1016: methods on the same type should have the same receiver name'
        # missing comments on v1alpha3 and v1alpha4 packages. These rules should be removed when those packages are removed.
      - linters:
          - revive
        path: ^(apis/(v1alpha3|v1alpha4)\/.*)\.go$
        text: package-comments
      - linters:
          - staticcheck
        path: ^(apis/(v1alpha3|v1alpha4)\/.*)\.go$
        text: ST1000
      - linters:
          - revive
        path: ^(apis/(v1alpha3|v1alpha4)\/.*)\.go$
        text: exported (.*) should have comment (.*)or be unexported
        # wrong comment
      - linters:
          - revive
        path: ^(apis/(v1alpha3|v1alpha4)\/.*)\.go$
        text: comment on exported (.*) should be of the form (.*)
      - linters:
          - staticcheck
        path: ^(apis/(v1alpha3|v1alpha4)\/.*)\.go$
        text: ST1021|ST1020
      - linters:
          - goconst
        path: (.+)_test\.go
        # It's clearer to see that a field gets accessed or func gets called on the embedded objects 
      - linters:
          - staticcheck
        path: (.+)\.go$
        text: 'QF1008: could remove embedded field'
issues:
  max-issues-per-linter: 0
  max-same-issues: 0
formatters:
  enable:
    - gci # ensures imports are organized
    - gofmt # warns about incorrect use of fmt functions
    - goimports # import formatting
  settings:
    gci:
      sections:
        - standard # Standard section: captures all standard packages.
        - default # Default section: contains all imports that could not be matched to another section type.
        - prefix(sigs.k8s.io/cluster-api-provider-vsphere) # Custom section: groups all imports with the specified Prefix.
      custom-order: true
  exclusions:
    generated: strict
    paths:
      - zz_generated.*\.go$
      - _conversion\.go$
      - vendored_cluster_api\.go$
      # We don't want to invest time to fix new linter findings in old API types.
      - ^internal/apis/topology/v1alpha1
