
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: awsloadbalancerconfigs.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: AWSLoadBalancerConfig
    plural: awsloadbalancerconfigs
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: AWSLoadBalancerConfig is the schema for the aws configuration API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: AWSLoadBalancerConfigSpec defines the desired state of an AWS
            load balancer
          properties:
            region:
              description: Region is the region used for the loadbalancers
              type: string
            subnetIds:
              description: SubnetIDs is the list of subnets within the VPC used
              items:
                type: string
              type: array
            vpcId:
              description: VpcID is the id of the VPC used to create loadBalancers
              type: string
          required:
          - region
          - subnetIds
          - vpcId
          type: object
      type: object
  version: v1alpha2
  versions:
  - name: v1alpha2
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
