apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
  name: vsphereclusterproviderspecs.vsphere.cluster.k8s.io
spec:
  group: vsphere.cluster.k8s.io
  names:
    kind: VsphereClusterProviderSpec
    plural: vsphereclusterproviderspecs
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        caKeyPair:
          description: CAKeyPair is the key pair for ca certs.
          properties:
            cert:
              description: base64 encoded cert and key
              format: byte
              type: string
            key:
              format: byte
              type: string
          required:
          - cert
          - key
          type: object
        cloudProviderConfiguration:
          description: CloudProviderConfiguration holds the cluster-wide configuration
            for the vSphere cloud provider.
          properties:
            disk:
              description: Disk is the vSphere cloud provider's disk configuration.
              properties:
                scsiControllerType:
                  description: SCSIControllerType defines SCSI controller to be used.
                  type: string
              type: object
            global:
              description: Global is the vSphere cloud provider's global configuration.
              properties:
                apiBindPort:
                  description: APIBindPort configures the vSphere cloud controller
                    manager API port. Defaults to 43001.
                  type: string
                apiDisable:
                  description: APIDisable disables the vSphere cloud controller manager
                    API. Defaults to true.
                  type: boolean
                caFile:
                  description: CAFile Specifies the path to a CA certificate in PEM
                    format. If not configured, the system's CA certificates will be
                    used.
                  type: string
                datacenters:
                  description: Datacenters is a CSV string of the datacenters in which
                    VMs are located.
                  type: string
                insecure:
                  description: Insecure is a flag that disables TLS peer verification.
                  type: boolean
                password:
                  description: Password is the password used to access a vSphere endpoint.
                  type: string
                port:
                  description: Port is the port on which the vSphere endpoint is listening.
                    Defaults to 443.
                  type: string
                roundTripperCount:
                  description: RoundTripperCount specifies the SOAP round tripper
                    count (retries = RoundTripper - 1)
                  format: int32
                  type: integer
                secretName:
                  description: SecretName is the name of the Kubernetes secret in
                    which the vSphere credentials are located.
                  type: string
                secretNamespace:
                  description: SecretNamespace is the namespace for SecretName.
                  type: string
                secretsDirectory:
                  description: 'SecretsDirectory is a directory in which secrets may
                    be found. This may used in the event that: 1. It is not desirable
                    to use the K8s API to watch changes to secrets 2. The cloud controller
                    manager is not running in a K8s environment,    such as DC/OS.
                    For example, the container storage interface (CSI) is    container
                    orcehstrator (CO) agnostic, and should support non-K8s COs. Defaults
                    to /etc/cloud/credentials.'
                  type: string
                serviceAccount:
                  description: ServiceAccount is the Kubernetes service account used
                    to launch the cloud controller manager. Defaults to cloud-controller-manager.
                  type: string
                thumbprint:
                  description: Thumbprint is the cryptographic thumbprint of the vSphere
                    endpoint's certificate.
                  type: string
                username:
                  description: Username is the username used to access a vSphere endpoint.
                  type: string
              type: object
            labels:
              description: Labels is the vSphere cloud provider's zone and region
                configuration.
              properties:
                region:
                  description: Region is the region in which VMs are created/located.
                  type: string
                zone:
                  description: Zone is the zone in which VMs are created/located.
                  type: string
              type: object
            network:
              description: Network is the vSphere cloud provider's network configuration.
              properties:
                name:
                  description: Name is the name of the network to which VMs are connected.
                  type: string
              type: object
            virtualCenter:
              description: VCenter is a list of vCenter configurations.
              type: object
            workspace:
              description: Workspace is the vSphere cloud provider's workspace configuration.
              properties:
                datacenter:
                  description: Datacenter is the datacenter in which VMs are created/located.
                  type: string
                datastore:
                  description: Datastore is the datastore in which VMs are created/located.
                  type: string
                folder:
                  description: Folder is the folder in which VMs are created/located.
                  type: string
                resourcePool:
                  description: ResourcePool is the resource pool in which VMs are
                    created/located.
                  type: string
                server:
                  description: Server is the IP address or FQDN of the vSphere endpoint.
                  type: string
              type: object
          type: object
        clusterConfiguration:
          description: ClusterConfiguration holds the cluster-wide information used
            during a kubeadm init call.
          properties:
            apiServer:
              description: APIServer contains extra settings for the API server control
                plane component
              properties:
                certSANs:
                  description: CertSANs sets extra Subject Alternative Names for the
                    API Server signing cert.
                  items:
                    type: string
                  type: array
                extraArgs:
                  description: 'ExtraArgs is an extra set of flags to pass to the
                    control plane component. TODO: This is temporary and ideally we
                    would like to switch all components to use ComponentConfig + ConfigMaps.'
                  type: object
                extraVolumes:
                  description: ExtraVolumes is an extra set of host volumes, mounted
                    to the control plane component.
                  items:
                    properties:
                      hostPath:
                        description: HostPath is the path in the host that will be
                          mounted inside the pod.
                        type: string
                      mountPath:
                        description: MountPath is the path inside the pod where hostPath
                          will be mounted.
                        type: string
                      name:
                        description: Name of the volume inside the pod template.
                        type: string
                      pathType:
                        description: PathType is the type of the HostPath.
                        type: string
                      readOnly:
                        description: ReadOnly controls write access to the volume
                        type: boolean
                    required:
                    - name
                    - hostPath
                    - mountPath
                    type: object
                  type: array
                timeoutForControlPlane:
                  description: TimeoutForControlPlane controls the timeout that we
                    use for API server to appear
                  type: string
              type: object
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
              type: string
            certificatesDir:
              description: CertificatesDir specifies where to store or look for all
                required certificates.
              type: string
            clusterName:
              description: The cluster name
              type: string
            controlPlaneEndpoint:
              description: 'ControlPlaneEndpoint sets a stable IP address or DNS name
                for the control plane; it can be a valid IP address or a RFC-1123
                DNS subdomain, both with optional TCP port. In case the ControlPlaneEndpoint
                is not specified, the AdvertiseAddress + BindPort are used; in case
                the ControlPlaneEndpoint is specified but without a TCP port, the
                BindPort is used. Possible usages are: e.g. In a cluster with more
                than one control plane instances, this field should be assigned the
                address of the external load balancer in front of the control plane
                instances. e.g.  in environments with enforced node recycling, the
                ControlPlaneEndpoint could be used for assigning a stable DNS to the
                control plane.'
              type: string
            controllerManager:
              description: ControllerManager contains extra settings for the controller
                manager control plane component
              properties:
                extraArgs:
                  description: 'ExtraArgs is an extra set of flags to pass to the
                    control plane component. TODO: This is temporary and ideally we
                    would like to switch all components to use ComponentConfig + ConfigMaps.'
                  type: object
                extraVolumes:
                  description: ExtraVolumes is an extra set of host volumes, mounted
                    to the control plane component.
                  items:
                    properties:
                      hostPath:
                        description: HostPath is the path in the host that will be
                          mounted inside the pod.
                        type: string
                      mountPath:
                        description: MountPath is the path inside the pod where hostPath
                          will be mounted.
                        type: string
                      name:
                        description: Name of the volume inside the pod template.
                        type: string
                      pathType:
                        description: PathType is the type of the HostPath.
                        type: string
                      readOnly:
                        description: ReadOnly controls write access to the volume
                        type: boolean
                    required:
                    - name
                    - hostPath
                    - mountPath
                    type: object
                  type: array
              type: object
            dns:
              description: DNS defines the options for the DNS add-on installed in
                the cluster.
              properties:
                imageRepository:
                  description: ImageRepository sets the container registry to pull
                    images from. if not set, the ImageRepository defined in ClusterConfiguration
                    will be used instead.
                  type: string
                imageTag:
                  description: ImageTag allows to specify a tag for the image. In
                    case this value is set, kubeadm does not change automatically
                    the version of the above components during upgrades.
                  type: string
                type:
                  description: Type defines the DNS add-on to be used
                  type: string
              required:
              - type
              type: object
            etcd:
              description: Etcd holds configuration for etcd.
              properties:
                external:
                  description: External describes how to connect to an external etcd
                    cluster Local and External are mutually exclusive
                  properties:
                    caFile:
                      description: CAFile is an SSL Certificate Authority file used
                        to secure etcd communication. Required if using a TLS connection.
                      type: string
                    certFile:
                      description: CertFile is an SSL certification file used to secure
                        etcd communication. Required if using a TLS connection.
                      type: string
                    endpoints:
                      description: Endpoints of etcd members. Required for ExternalEtcd.
                      items:
                        type: string
                      type: array
                    keyFile:
                      description: KeyFile is an SSL key file used to secure etcd
                        communication. Required if using a TLS connection.
                      type: string
                  required:
                  - endpoints
                  - caFile
                  - certFile
                  - keyFile
                  type: object
                local:
                  description: Local provides configuration knobs for configuring
                    the local etcd instance Local and External are mutually exclusive
                  properties:
                    dataDir:
                      description: DataDir is the directory etcd will place its data.
                        Defaults to "/var/lib/etcd".
                      type: string
                    extraArgs:
                      description: ExtraArgs are extra arguments provided to the etcd
                        binary when run inside a static pod.
                      type: object
                    imageRepository:
                      description: ImageRepository sets the container registry to
                        pull images from. if not set, the ImageRepository defined
                        in ClusterConfiguration will be used instead.
                      type: string
                    imageTag:
                      description: ImageTag allows to specify a tag for the image.
                        In case this value is set, kubeadm does not change automatically
                        the version of the above components during upgrades.
                      type: string
                    peerCertSANs:
                      description: PeerCertSANs sets extra Subject Alternative Names
                        for the etcd peer signing cert.
                      items:
                        type: string
                      type: array
                    serverCertSANs:
                      description: ServerCertSANs sets extra Subject Alternative Names
                        for the etcd server signing cert.
                      items:
                        type: string
                      type: array
                  required:
                  - dataDir
                  type: object
              type: object
            featureGates:
              description: FeatureGates enabled by the user.
              type: object
            imageRepository:
              description: ImageRepository sets the container registry to pull images
                from. If empty, `k8s.gcr.io` will be used by default; in case of kubernetes
                version is a CI build (kubernetes version starts with `ci/` or `ci-cross/`)
                `gcr.io/kubernetes-ci-images` will be used as a default for control
                plane components and for kube-proxy, while `k8s.gcr.io` will be used
                for all the other images.
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
              type: string
            kubernetesVersion:
              description: KubernetesVersion is the target version of the control
                plane.
              type: string
            networking:
              description: Networking holds configuration for the networking topology
                of the cluster.
              properties:
                dnsDomain:
                  description: DNSDomain is the dns domain used by k8s services. Defaults
                    to "cluster.local".
                  type: string
                podSubnet:
                  description: PodSubnet is the subnet used by pods.
                  type: string
                serviceSubnet:
                  description: ServiceSubnet is the subnet used by k8s services. Defaults
                    to "10.96.0.0/12".
                  type: string
              required:
              - serviceSubnet
              - podSubnet
              - dnsDomain
              type: object
            scheduler:
              description: Scheduler contains extra settings for the scheduler control
                plane component
              properties:
                extraArgs:
                  description: 'ExtraArgs is an extra set of flags to pass to the
                    control plane component. TODO: This is temporary and ideally we
                    would like to switch all components to use ComponentConfig + ConfigMaps.'
                  type: object
                extraVolumes:
                  description: ExtraVolumes is an extra set of host volumes, mounted
                    to the control plane component.
                  items:
                    properties:
                      hostPath:
                        description: HostPath is the path in the host that will be
                          mounted inside the pod.
                        type: string
                      mountPath:
                        description: MountPath is the path inside the pod where hostPath
                          will be mounted.
                        type: string
                      name:
                        description: Name of the volume inside the pod template.
                        type: string
                      pathType:
                        description: PathType is the type of the HostPath.
                        type: string
                      readOnly:
                        description: ReadOnly controls write access to the volume
                        type: boolean
                    required:
                    - name
                    - hostPath
                    - mountPath
                    type: object
                  type: array
              type: object
            useHyperKubeImage:
              description: UseHyperKubeImage controls if hyperkube should be used
                for Kubernetes components instead of their respective separate images
              type: boolean
          required:
          - etcd
          - networking
          - kubernetesVersion
          - controlPlaneEndpoint
          - dns
          - certificatesDir
          - imageRepository
          type: object
        etcdCAKeyPair:
          description: EtcdCAKeyPair is the key pair for etcd.
          properties:
            cert:
              description: base64 encoded cert and key
              format: byte
              type: string
            key:
              format: byte
              type: string
          required:
          - cert
          - key
          type: object
        frontProxyCAKeyPair:
          description: FrontProxyCAKeyPair is the key pair for FrontProxyKeyPair.
          properties:
            cert:
              description: base64 encoded cert and key
              format: byte
              type: string
            key:
              format: byte
              type: string
          required:
          - cert
          - key
          type: object
        insecure:
          description: Insecure is a flag that controls whether or not to validate
            the vSphere server's certificate.
          type: boolean
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        password:
          description: Password is the password used to log into the vSphere server.  This
            value is optional unless using clusterctl to bootstrap the initial management
            cluster.
          type: string
        saKeyPair:
          description: SAKeyPair is the service account key pair.
          properties:
            cert:
              description: base64 encoded cert and key
              format: byte
              type: string
            key:
              format: byte
              type: string
          required:
          - cert
          - key
          type: object
        server:
          description: Server is the address of the vSphere endpoint.
          type: string
        sshAuthorizedKeys:
          description: SSHAuthorizedKeys is a list of SSH public keys authorized to
            access deployed machines.  These keys are added to the default user as
            determined by cloud-init in the images from which the machines are deployed.  The
            default user for CentOS is "centos". The default user for Ubuntu is "ubuntu".
          items:
            type: string
          type: array
        username:
          description: Username is the name used to log into the vSphere server.  This
            value is optional unless using clusterctl to bootstrap the initial management
            cluster.
          type: string
        vmwareCloud:
          description: VmwareCloud describes the supported cloud providers to run
            VMC
          properties:
            awsProviderSpec:
              description: AwsProvider specifies the information needed to run VMC
                on AWS
              properties:
                region:
                  description: Region is the region used for the loadbalancers
                  type: string
                subnets:
                  description: Subnets is the list of subnets where
                  items:
                    type: string
                  type: array
                vpcID:
                  description: VpcID is the id of the VPC used to create loadBalancers
                  type: string
              required:
              - vpcID
              - subnets
              - region
              type: object
          required:
          - awsProviderSpec
          type: object
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
