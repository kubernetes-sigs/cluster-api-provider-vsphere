---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: vspheremachines.vmware.infrastructure.cluster.x-k8s.io
spec:
  group: vmware.infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: VSphereMachine
    listKind: VSphereMachineList
    plural: vspheremachines
    singular: vspheremachine
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Zone
      jsonPath: .spec.failureDomain
      name: Zone
      type: string
    - description: Provider ID
      jsonPath: .spec.providerID
      name: ProviderID
      type: string
    - description: IP address
      jsonPath: .status.vmIp
      name: IPAddr
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: VSphereMachine is the Schema for the vspheremachines API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: VSphereMachineSpec defines the desired state of VSphereMachine.
            properties:
              className:
                description: |-
                  ClassName is the name of the class used when specifying the underlying
                  virtual machine
                type: string
              failureDomain:
                description: |-
                  FailureDomain is the failure domain the machine will be created in.
                  Must match a key in the FailureDomains map stored on the cluster object.
                type: string
              imageName:
                description: |-
                  ImageName is the name of the base image used when specifying the
                  underlying virtual machine
                type: string
              minHardwareVersion:
                description: |-
                  MinHardwareVersion specifies the desired minimum hardware version
                  for this VM. Setting this field will ensure that the hardware version
                  of the VM is at least set to the specified value.
                  The expected format of the field is vmx-15.
                type: string
              namingStrategy:
                description: NamingStrategy allows configuring the naming strategy
                  used when calculating the name of the VirtualMachine.
                properties:
                  template:
                    description: |-
                      Template defines the template to use for generating the name of the VirtualMachine object.
                      If not defined, it will fall back to `{{ .machine.name }}`.
                      The templating has the following data available:
                      * `.machine.name`: The name of the Machine object.
                      The templating also has the following funcs available:
                      * `trimSuffix`: same as strings.TrimSuffix
                      * `trunc`: truncates a string, e.g. `trunc 2 "hello"` or `trunc -2 "hello"`
                      Notes:
                      * While the template offers some flexibility, we would like the name to link to the Machine name
                        to ensure better user experience when troubleshooting
                      * Generated names must be valid Kubernetes names as they are used to create a VirtualMachine object
                        and usually also as the name of the Node object.
                      * Names are automatically truncated at 63 characters. Please note that this can lead to name conflicts,
                        so we highly recommend to use a template which leads to a name shorter than 63 characters.
                    type: string
                type: object
              network:
                description: Network is the network configuration for the VSphereMachine
                properties:
                  interfaces:
                    description: Interfaces is the list of network interfaces attached
                      to this VSphereMachine.
                    properties:
                      primary:
                        description: |-
                          Primary is the primary network interface.

                          It is used to connect the Kubernetes primary network for Load balancer,
                          Service discovery, Pod traffic and management traffic etc.
                          Leave it unset if you don't want to customize the primary network and interface.
                          Customization is only supported with network provider NSX-VPC.
                          It should be set only when VSphereCluster spec.network.nsxVPC.createSubnetSet is set to false.
                        properties:
                          mtu:
                            description: MTU is the Maximum Transmission Unit size
                              in bytes.
                            format: int64
                            type: integer
                          network:
                            description: |-
                              Network is the name of the network resource to which this interface is
                              connected.
                            properties:
                              apiVersion:
                                description: |-
                                  APIVersion defines the versioned schema of this representation of an object.
                                  Servers should convert recognized schemas to the latest internal value, and
                                  may reject unrecognized values.
                                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                                type: string
                              kind:
                                description: |-
                                  Kind is a string value representing the REST resource this object represents.
                                  Servers may infer this from the endpoint the client submits requests to.
                                  Cannot be updated.
                                  In CamelCase.
                                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                                type: string
                              name:
                                description: Name refers to a unique resource in the
                                  current namespace.
                                type: string
                            required:
                            - name
                            type: object
                          routes:
                            description: |-
                              Routes is a list of optional, static routes.

                              Please note this feature is available only with the following bootstrap
                              providers: CloudInit.
                            items:
                              description: RouteSpec defines a static route for a
                                guest.
                              properties:
                                to:
                                  description: To is either "default", or an IP4 address.
                                    IP6 is not supported yet.
                                  pattern: ^(default|([0-9]{1,3}\.){3}[0-9]{1,3}(\/[0-9]{1,2})?)$
                                  type: string
                                via:
                                  description: Via is an IP4 address. IP6 is not supported
                                    yet.
                                  pattern: ^([0-9]{1,3}\.){3}[0-9]{1,3}$
                                  type: string
                              required:
                              - to
                              - via
                              type: object
                            type: array
                        required:
                        - network
                        type: object
                      secondary:
                        description: |-
                          Secondary is the secondary network interface.

                          It is used for any purpose like deploying Antrea secondary network,
                          Multus, mounting NFS etc.
                          Secondary network is supported with network provider NSX-VPC and vsphere-network.
                        items:
                          description: InterfaceSpec defines a network interface for
                            a VSphereMachine.
                          properties:
                            mtu:
                              description: MTU is the Maximum Transmission Unit size
                                in bytes.
                              format: int64
                              type: integer
                            name:
                              description: |-
                                Name describes the unique name of this network interface, used to
                                distinguish it from other network interfaces attached to this VSphereMachine.
                              pattern: ^[a-z0-9]{2,}$
                              type: string
                            network:
                              description: |-
                                Network is the name of the network resource to which this interface is
                                connected.
                              properties:
                                apiVersion:
                                  description: |-
                                    APIVersion defines the versioned schema of this representation of an object.
                                    Servers should convert recognized schemas to the latest internal value, and
                                    may reject unrecognized values.
                                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                                  type: string
                                kind:
                                  description: |-
                                    Kind is a string value representing the REST resource this object represents.
                                    Servers may infer this from the endpoint the client submits requests to.
                                    Cannot be updated.
                                    In CamelCase.
                                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                                  type: string
                                name:
                                  description: Name refers to a unique resource in
                                    the current namespace.
                                  type: string
                              required:
                              - name
                              type: object
                            routes:
                              description: |-
                                Routes is a list of optional, static routes.

                                Please note this feature is available only with the following bootstrap
                                providers: CloudInit.
                              items:
                                description: RouteSpec defines a static route for
                                  a guest.
                                properties:
                                  to:
                                    description: To is either "default", or an IP4
                                      address. IP6 is not supported yet.
                                    pattern: ^(default|([0-9]{1,3}\.){3}[0-9]{1,3}(\/[0-9]{1,2})?)$
                                    type: string
                                  via:
                                    description: Via is an IP4 address. IP6 is not
                                      supported yet.
                                    pattern: ^([0-9]{1,3}\.){3}[0-9]{1,3}$
                                    type: string
                                required:
                                - to
                                - via
                                type: object
                              type: array
                          required:
                          - name
                          - network
                          type: object
                        type: array
                    type: object
                    x-kubernetes-validations:
                    - message: field 'primary' cannot be added or removed after creation
                      rule: has(self.primary) == has(oldSelf.primary)
                type: object
                x-kubernetes-validations:
                - message: field 'interfaces' cannot be added or removed after creation
                  rule: has(self.interfaces) == has(oldSelf.interfaces)
              powerOffMode:
                default: hard
                description: |-
                  PowerOffMode describes the desired behavior when powering off a VM.

                  There are three, supported power off modes: hard, soft, and
                  trySoft. The first mode, hard, is the equivalent of a physical
                  system's power cord being ripped from the wall. The soft mode
                  requires the VM's guest to have VM Tools installed and attempts to
                  gracefully shut down the VM. Its variant, trySoft, first attempts
                  a graceful shutdown, and if that fails or the VM is not in a powered off
                  state after reaching 5 minutes timeout, the VM is halted.

                  If omitted, the mode defaults to hard.
                enum:
                - hard
                - soft
                - trySoft
                type: string
              providerID:
                description: |-
                  ProviderID is the virtual machine's BIOS UUID formatted as
                  vsphere://12345678-1234-1234-1234-123456789abc.
                  This is required at runtime by CAPI. Do not remove this field.
                type: string
              storageClass:
                description: |-
                  StorageClass is the name of the storage class used when specifying the
                  underlying virtual machine.
                type: string
              volumes:
                description: Volumes is the set of PVCs to be created and attached
                  to the VSphereMachine
                items:
                  description: VSphereMachineVolume defines a PVC attachment.
                  properties:
                    capacity:
                      additionalProperties:
                        anyOf:
                        - type: integer
                        - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      description: Capacity is the PVC capacity
                      type: object
                    name:
                      description: 'Name is suffix used to name this PVC as: VSphereMachine.Name
                        + "-" + Name'
                      type: string
                    storageClass:
                      description: StorageClass defaults to VSphereMachineSpec.StorageClass
                      type: string
                  required:
                  - capacity
                  - name
                  type: object
                type: array
            required:
            - className
            - imageName
            type: object
            x-kubernetes-validations:
            - message: field 'network' cannot be added or removed after creation
              rule: has(self.network) == has(oldSelf.network)
          status:
            description: VSphereMachineStatus defines the observed state of VSphereMachine.
            properties:
              addresses:
                description: Addresses contains the instance associated addresses.
                items:
                  description: MachineAddress contains information for the node's
                    address.
                  properties:
                    address:
                      description: address is the machine address.
                      maxLength: 256
                      minLength: 1
                      type: string
                    type:
                      description: type is the machine address type, one of Hostname,
                        ExternalIP, InternalIP, ExternalDNS or InternalDNS.
                      enum:
                      - Hostname
                      - ExternalIP
                      - InternalIP
                      - ExternalDNS
                      - InternalDNS
                      type: string
                  required:
                  - address
                  - type
                  type: object
                type: array
              conditions:
                description: Conditions defines current service state of the VSphereMachine.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This field may be empty.
                      maxLength: 10240
                      minLength: 1
                      type: string
                    reason:
                      description: |-
                        reason is the reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may be empty.
                      maxLength: 256
                      minLength: 1
                      type: string
                    severity:
                      description: |-
                        severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      maxLength: 32
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      maxLength: 256
                      minLength: 1
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: |-
                  FailureMessage will be set in the event that there is a terminal problem
                  reconciling the Machine and will contain a more verbose string suitable
                  for logging and human consumption.

                  This field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over
                  time (like service outages), but instead indicate that something is
                  fundamentally wrong with the Machine's spec or the configuration of
                  the controller, and that manual intervention is required. Examples
                  of terminal errors would be invalid combinations of settings in the
                  spec, values that are unsupported by the controller, or the
                  responsible controller itself being critically misconfigured.

                  Any transient errors that occur during the reconciliation of Machines
                  can be added as events to the Machine object and/or logged in the
                  controller's output.
                type: string
              failureReason:
                description: |-
                  FailureReason will be set in the event that there is a terminal problem
                  reconciling the Machine and will contain a succinct value suitable
                  for machine interpretation.

                  This field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over
                  time (like service outages), but instead indicate that something is
                  fundamentally wrong with the Machine's spec or the configuration of
                  the controller, and that manual intervention is required. Examples
                  of terminal errors would be invalid combinations of settings in the
                  spec, values that are unsupported by the controller, or the
                  responsible controller itself being critically misconfigured.

                  Any transient errors that occur during the reconciliation of Machines
                  can be added as events to the Machine object and/or logged in the
                  controller's output.
                type: string
              network:
                description: |-
                  Network describes the observed state of the VM's network configuration.
                  Please note much of the network status information is only available if
                  the guest has VM Tools installed.
                properties:
                  interfaces:
                    description: Interfaces describes the status of the VM's network
                      interfaces.
                    items:
                      description: |-
                        VSphereMachineNetworkInterfaceStatus describes the observed state of a
                        VM's network interface.
                      properties:
                        deviceKey:
                          description: |-
                            DeviceKey describes the unique hardware device key of this network
                            interface.
                          format: int32
                          type: integer
                        dns:
                          description: DNS describes the observed state of the interface's
                            DNS configuration.
                          properties:
                            dhcp:
                              description: |-
                                DHCP indicates whether or not dynamic host control protocol (DHCP) was
                                used to configure DNS configuration.
                              type: boolean
                            domainName:
                              description: |-
                                DomainName is the domain name portion of the DNS name. For example,
                                the "domain.local" part of "my-vm.domain.local".
                              type: string
                            hostName:
                              description: |-
                                HostName is the host name portion of the DNS name. For example,
                                the "my-vm" part of "my-vm.domain.local".
                              type: string
                            nameservers:
                              description: |-
                                Nameservers is a list of the IP addresses for the DNS servers to use.

                                IP4 addresses are specified using dotted decimal notation. For example,
                                "192.0.2.1".

                                IP6 addresses are 128-bit addresses represented as eight fields of up to
                                four hexadecimal digits. A colon separates each field (:). For example,
                                2001:DB8:101::230:6eff:fe04:d9ff. The address can also consist of the
                                symbol '::' to represent multiple 16-bit groups of contiguous 0's only
                                once in an address as described in RFC 2373.
                              items:
                                type: string
                              type: array
                            searchDomains:
                              description: |-
                                SearchDomains is a list of domains in which to search for hosts, in the
                                order of preference.
                              items:
                                type: string
                              type: array
                          type: object
                        ip:
                          description: IP describes the observed state of the interface's
                            IP configuration.
                          properties:
                            addresses:
                              description: Addresses describes observed IP addresses
                                for this interface.
                              items:
                                description: |-
                                  VSphereMachineNetworkInterfaceIPAddrStatus describes information about a
                                  specific IP address.
                                properties:
                                  address:
                                    description: |-
                                      Address is an IP4 or IP6 address and their network prefix length.

                                      An IP4 address is specified using dotted decimal notation. For example,
                                      "192.0.2.1".

                                      IP6 addresses are 128-bit addresses represented as eight fields of up to
                                      four hexadecimal digits. A colon separates each field (:). For example,
                                      2001:DB8:101::230:6eff:fe04:d9ff. The address can also consist of the
                                      symbol '::' to represent multiple 16-bit groups of contiguous 0's only
                                      once in an address as described in RFC 2373.
                                    type: string
                                  lifetime:
                                    description: Lifetime describes when this address
                                      will expire.
                                    format: date-time
                                    type: string
                                  origin:
                                    description: Origin describes how this address
                                      was configured.
                                    enum:
                                    - dhcp
                                    - linklayer
                                    - manual
                                    - other
                                    - random
                                    type: string
                                  state:
                                    description: State describes the state of this
                                      IP address.
                                    enum:
                                    - deprecated
                                    - duplicate
                                    - inaccessible
                                    - invalid
                                    - preferred
                                    - tentative
                                    - unknown
                                    type: string
                                required:
                                - address
                                type: object
                              type: array
                            autoConfigurationEnabled:
                              description: |-
                                AutoConfigurationEnabled describes whether or not ICMPv6 router
                                solicitation requests are enabled or disabled from a given interface.

                                These requests acquire an IP6 address and default gateway route from
                                zero-to-many routers on the connected network.

                                If not set then ICMPv6 is not available on this VM.
                              type: boolean
                            dhcp:
                              description: |-
                                DHCP describes the VM's observed, client-side, interface-specific DHCP
                                options.
                              properties:
                                ip4:
                                  description: IP4 describes the observed state of
                                    the IP4 DHCP client settings.
                                  properties:
                                    config:
                                      description: |-
                                        Config describes platform-dependent settings for the DHCP client.

                                        The key part is a unique number while the value part is the platform
                                        specific configuration command. For example on Linux and BSD systems
                                        using the file dhclient.conf output would be reported at system scope:
                                        key='1', value='timeout 60;' key='2', value='reboot 10;'. The output
                                        reported per interface would be:
                                        key='1', value='prepend domain-name-servers 192.0.2.1;'
                                        key='2', value='require subnet-mask, domain-name-servers;'.
                                      items:
                                        description: |-
                                          KeyValuePair is useful when wanting to realize a map as a list of key/value
                                          pairs.
                                        properties:
                                          key:
                                            description: Key is the key part of the
                                              key/value pair.
                                            type: string
                                          value:
                                            description: Value is the optional value
                                              part of the key/value pair.
                                            type: string
                                        required:
                                        - key
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - key
                                      x-kubernetes-list-type: map
                                    enabled:
                                      description: Enabled reports the status of the
                                        DHCP client services.
                                      type: boolean
                                  type: object
                                ip6:
                                  description: IP6 describes the observed state of
                                    the IP6 DHCP client settings.
                                  properties:
                                    config:
                                      description: |-
                                        Config describes platform-dependent settings for the DHCP client.

                                        The key part is a unique number while the value part is the platform
                                        specific configuration command. For example on Linux and BSD systems
                                        using the file dhclient.conf output would be reported at system scope:
                                        key='1', value='timeout 60;' key='2', value='reboot 10;'. The output
                                        reported per interface would be:
                                        key='1', value='prepend domain-name-servers 192.0.2.1;'
                                        key='2', value='require subnet-mask, domain-name-servers;'.
                                      items:
                                        description: |-
                                          KeyValuePair is useful when wanting to realize a map as a list of key/value
                                          pairs.
                                        properties:
                                          key:
                                            description: Key is the key part of the
                                              key/value pair.
                                            type: string
                                          value:
                                            description: Value is the optional value
                                              part of the key/value pair.
                                            type: string
                                        required:
                                        - key
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - key
                                      x-kubernetes-list-type: map
                                    enabled:
                                      description: Enabled reports the status of the
                                        DHCP client services.
                                      type: boolean
                                  type: object
                              type: object
                            macAddr:
                              description: MACAddr describes the observed MAC address
                                for this interface.
                              type: string
                          type: object
                        name:
                          description: |-
                            Name describes the corresponding network interface with the same name
                            in the VM's desired network interface list. If unset, then there is no
                            corresponding entry for this interface.

                            Please note this name is not necessarily related to the name of the
                            device as it is surfaced inside of the guest.
                          type: string
                      type: object
                    type: array
                type: object
              ready:
                description: |-
                  Ready is true when the provider resource is ready.
                  This is required at runtime by CAPI. Do not remove this field.
                type: boolean
              v1beta2:
                description: v1beta2 groups all the fields that will be added or modified
                  in VSphereMachine's status with the V1Beta2 version.
                properties:
                  conditions:
                    description: |-
                      conditions represents the observations of a VSphereMachine's current state.
                      Known condition types are Ready, VirtualMachineProvisioned and Paused.
                    items:
                      description: Condition contains details for one aspect of the
                        current state of this API Resource.
                      properties:
                        lastTransitionTime:
                          description: |-
                            lastTransitionTime is the last time the condition transitioned from one status to another.
                            This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                          format: date-time
                          type: string
                        message:
                          description: |-
                            message is a human readable message indicating details about the transition.
                            This may be an empty string.
                          maxLength: 32768
                          type: string
                        observedGeneration:
                          description: |-
                            observedGeneration represents the .metadata.generation that the condition was set based upon.
                            For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                            with respect to the current state of the instance.
                          format: int64
                          minimum: 0
                          type: integer
                        reason:
                          description: |-
                            reason contains a programmatic identifier indicating the reason for the condition's last transition.
                            Producers of specific condition types may define expected values and meanings for this field,
                            and whether the values are considered a guaranteed API.
                            The value should be a CamelCase string.
                            This field may not be empty.
                          maxLength: 1024
                          minLength: 1
                          pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                          type: string
                        status:
                          description: status of the condition, one of True, False,
                            Unknown.
                          enum:
                          - "True"
                          - "False"
                          - Unknown
                          type: string
                        type:
                          description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          maxLength: 316
                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                          type: string
                      required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                      type: object
                    maxItems: 32
                    type: array
                    x-kubernetes-list-map-keys:
                    - type
                    x-kubernetes-list-type: map
                type: object
              vmID:
                description: ID is used to identify the virtual machine.
                type: string
              vmIp:
                description: IPAddr is the IP address used to access the virtual machine.
                type: string
              vmstatus:
                description: VMStatus is used to identify the virtual machine status.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
