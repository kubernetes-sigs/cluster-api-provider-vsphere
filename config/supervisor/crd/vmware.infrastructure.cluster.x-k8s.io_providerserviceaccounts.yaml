
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: providerserviceaccounts.vmware.infrastructure.cluster.x-k8s.io
spec:
  group: vmware.infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: ProviderServiceAccount
    listKind: ProviderServiceAccountList
    plural: providerserviceaccounts
    singular: providerserviceaccount
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.ref.name
      name: VSphereCluster
      type: string
    - jsonPath: .spec.targetNamespace
      name: TargetNamespace
      type: string
    - jsonPath: .spec.targetSecretName
      name: TargetSecretName
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: ProviderServiceAccount is the schema for the ProviderServiceAccount
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ProviderServiceAccountSpec defines the desired state of ProviderServiceAccount.
            properties:
              ref:
                description: Ref specifies the reference to the VSphereCluster for
                  which the ProviderServiceAccount needs to be realized.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              rules:
                description: Rules specifies the privileges that need to be granted
                  to the service account.
                items:
                  description: PolicyRule holds information that describes a policy
                    rule, but does not contain information about who the rule applies
                    to or which namespace the rule applies to.
                  properties:
                    apiGroups:
                      description: APIGroups is the name of the APIGroup that contains
                        the resources.  If multiple API groups are specified, any
                        action requested against one of the enumerated resources in
                        any API group will be allowed.
                      items:
                        type: string
                      type: array
                    nonResourceURLs:
                      description: NonResourceURLs is a set of partial urls that a
                        user should have access to.  *s are allowed, but only as the
                        full, final step in the path Since non-resource URLs are not
                        namespaced, this field is only applicable for ClusterRoles
                        referenced from a ClusterRoleBinding. Rules can either apply
                        to API resources (such as "pods" or "secrets") or non-resource
                        URL paths (such as "/api"),  but not both.
                      items:
                        type: string
                      type: array
                    resourceNames:
                      description: ResourceNames is an optional white list of names
                        that the rule applies to.  An empty set means that everything
                        is allowed.
                      items:
                        type: string
                      type: array
                    resources:
                      description: Resources is a list of resources this rule applies
                        to. '*' represents all resources.
                      items:
                        type: string
                      type: array
                    verbs:
                      description: Verbs is a list of Verbs that apply to ALL the
                        ResourceKinds contained in this rule. '*' represents all verbs.
                      items:
                        type: string
                      type: array
                  required:
                  - verbs
                  type: object
                type: array
              targetNamespace:
                description: TargetNamespace is the namespace in the target cluster
                  where the secret containing the generated service account token
                  needs to be created.
                type: string
              targetSecretName:
                description: TargetSecretName is the name of the secret in the target
                  cluster that contains the generated service account token.
                type: string
            required:
            - ref
            - rules
            - targetNamespace
            - targetSecretName
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
